<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Welcome</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-22T14:02:11.500Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>guoziyi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>面试总结之html/css</title>
    <link href="http://yoursite.com/2018/04/22/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%931/"/>
    <id>http://yoursite.com/2018/04/22/前端面试总结1/</id>
    <published>2018-04-22T13:57:47.000Z</published>
    <updated>2018-04-22T14:02:11.500Z</updated>
    
    <content type="html"><![CDATA[<h3 id="行级元素："><a href="#行级元素：" class="headerlink" title="行级元素："></a>行级元素：</h3><p>a b br em span i input 内容决定宽高，不可以改变</p><h3 id="块级元素"><a href="#块级元素" class="headerlink" title="块级元素:"></a>块级元素:</h3><p>div ul ol h1-h6 table p  占满整行，可以改变宽高</p><h3 id="inline-block："><a href="#inline-block：" class="headerlink" title="inline-block："></a>inline-block：</h3><p>内容决定占位，可以改变宽高</p><h3 id="nodetype的值："><a href="#nodetype的值：" class="headerlink" title="nodetype的值："></a>nodetype的值：</h3><p>元素节点：1<br>属性节点：2<br>文本节点：3</p><h3 id="兼容h5的方法："><a href="#兼容h5的方法：" class="headerlink" title="兼容h5的方法："></a>兼容h5的方法：</h3><p>创建一个以标签名命名的数组，在一个立即执行函数中构造出来所有标签，并设为块级元素</p><h3 id="引入css的几种方式："><a href="#引入css的几种方式：" class="headerlink" title="引入css的几种方式："></a>引入css的几种方式：</h3><p>@import style link 行间</p><h3 id="css选择器权重："><a href="#css选择器权重：" class="headerlink" title="css选择器权重："></a>css选择器权重：</h3><p>！important        无穷<br>行间style          1000<br>id                100<br>class 伪类        10<br>标签 伪元素     1</p><ul><li>0    </li></ul><h3 id="触发bfc的方式：（块级格式化上下文）"><a href="#触发bfc的方式：（块级格式化上下文）" class="headerlink" title="触发bfc的方式：（块级格式化上下文）"></a>触发bfc的方式：（块级格式化上下文）</h3><p>display:inline-block/flex<br>position:absolute/fixed<br>overflow:不为visible<br>float:不为none</p><h3 id="bfc作用："><a href="#bfc作用：" class="headerlink" title="bfc作用："></a>bfc作用：</h3><p>阻止margin塌陷</p><h3 id="margin塌陷合并："><a href="#margin塌陷合并：" class="headerlink" title="margin塌陷合并："></a>margin塌陷合并：</h3><p>垂直合并：上面元素的bottom和下面元素的top会选择大的那个<br>父子塌陷：嵌套元素中，如果设置子元素top，父元素会被top子元素不动</p><h3 id="清除浮动的方法："><a href="#清除浮动的方法：" class="headerlink" title="清除浮动的方法："></a>清除浮动的方法：</h3><p>增加一个空元素clear：both<br>父级加伪类（before、after）clear:both;content:””;display:block;<br>父级：overflow：auto;</p><h3 id="两栏布局："><a href="#两栏布局：" class="headerlink" title="两栏布局："></a>两栏布局：</h3><p>1.左侧固定：左侧左浮动 右侧margin，宽度100%<br>2.右侧固定：左侧左浮动右侧右浮动，左侧margin-的，左侧宽度100%</p><h3 id="三栏布局：-中间的标签在最后"><a href="#三栏布局：-中间的标签在最后" class="headerlink" title="三栏布局：(中间的标签在最后)"></a>三栏布局：(中间的标签在最后)</h3><p>1.左右浮动，中间设margin<br>2.左右absolute为0，中间设margin</p><h3 id="水平垂直居中一个元素："><a href="#水平垂直居中一个元素：" class="headerlink" title="水平垂直居中一个元素："></a>水平垂直居中一个元素：</h3><p>1.position：absolute<br>    left：50%；<br>    top：50%；<br>    margin-left：-宽度一半<br>    margin-top：-高度一半<br>2.position：absolute；<br>    margin:auto;<br>    left:0;<br>    right:0;<br>    top:0;<br>    bottom:0;<br>3.position:absolute;<br>    left:50%;<br>    top:50%;<br>    transform:translate(-50%,-50%);<br>4.父级：display：flex；<br>        justify-content：center；</p><h3 id="position的区别："><a href="#position的区别：" class="headerlink" title="position的区别："></a>position的区别：</h3><p>absolute：基于第一个非static的父级定位<br>relative：基于原来位置定位<br>fiexd：相对于视口进行定位（不兼容的话使用js计算滚动的距离手动实现）</p><h3 id="重绘："><a href="#重绘：" class="headerlink" title="重绘："></a>重绘：</h3><p>当前页面中元素外观发生变化重新渲染</p><h3 id="重排："><a href="#重排：" class="headerlink" title="重排："></a>重排：</h3><p>当前页面dom树结构变化，或者窗口大小变化的，浏览器需要重新排列元素的行为</p><h3 id="优化："><a href="#优化：" class="headerlink" title="优化："></a>优化：</h3><p>将多次重绘重排放到一起</p><h3 id="浏览器渲染过程："><a href="#浏览器渲染过程：" class="headerlink" title="浏览器渲染过程："></a>浏览器渲染过程：</h3><p>获取html，构建dom树<br>根据css构建render树，render树不包含定位和几何信息<br>构建布局树，含有定位和几何信息</p><h3 id="响应式布局："><a href="#响应式布局：" class="headerlink" title="响应式布局："></a>响应式布局：</h3><p><meta name="viewport" content="width=device-width" initial-scale="1"><br>不用绝对宽度用相对的<br>选择加载css <link rel="stylesheet" media="screen and (max-device-with:100px)" href=""><br>@media screen and (max…)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;行级元素：&quot;&gt;&lt;a href=&quot;#行级元素：&quot; class=&quot;headerlink&quot; title=&quot;行级元素：&quot;&gt;&lt;/a&gt;行级元素：&lt;/h3&gt;&lt;p&gt;a b br em span i input 内容决定宽高，不可以改变&lt;/p&gt;
&lt;h3 id=&quot;块级元素&quot;&gt;&lt;a h
      
    
    </summary>
    
      <category term="面试" scheme="http://yoursite.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
      <category term="面试" scheme="http://yoursite.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>js事件那些事</title>
    <link href="http://yoursite.com/2018/04/22/%E4%BA%8B%E4%BB%B6/"/>
    <id>http://yoursite.com/2018/04/22/事件/</id>
    <published>2018-04-22T11:14:47.000Z</published>
    <updated>2018-04-22T11:54:12.219Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是事件："><a href="#什么是事件：" class="headerlink" title="什么是事件："></a>什么是事件：</h3><p>事件是交互体验的核心功能</p><h3 id="一．事件冒泡："><a href="#一．事件冒泡：" class="headerlink" title="一．事件冒泡："></a>一．事件冒泡：</h3><p>当一个事件发生时，这个事件会从内向外逐层传递。</p><h3 id="二．为什么会有事件冒泡："><a href="#二．为什么会有事件冒泡：" class="headerlink" title="二．为什么会有事件冒泡："></a>二．为什么会有事件冒泡：</h3><p>因为该事件源本身可能没有处理该事件的能力，所以事件源会把事件交给父级处理</p><h3 id="三．事件捕获："><a href="#三．事件捕获：" class="headerlink" title="三．事件捕获："></a>三．事件捕获：</h3><p>事件捕获和事件冒泡正好是相反的顺序</p><h3 id="标准浏览器："><a href="#标准浏览器：" class="headerlink" title="标准浏览器："></a>标准浏览器：</h3><p>1.Dom.addEventListener(‘click’,function(){},false);</p><p>为dom对象添加一个事件监听器 ，与直接绑定的方式不同 直接绑定的方式 绑定函数只执行一次</p><p>addEventListener()可以多次使用重复执行 这里添加的事件处理程序是在其依副的元素作用域中运行</p><p>第一个参数是事件类型，第二个参数是回调函数（即用来执行的代码），第三个参数默认为false，当改为true时，代表事件捕获；</p><p>2.Dom.removeEventListener(‘click’,function(){});</p><p>为dom对象移除监听器，用addEventListener（）绑定的事件只能用removeEventListener（）解除</p><p>removeEventListener（）第一个参数是事件类型，第二个是要移除的回调函数</p><h3 id="IE浏览器："><a href="#IE浏览器：" class="headerlink" title="IE浏览器："></a>IE浏览器：</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dom.attachEvent(<span class="string">"onclick"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line">dom.detachEvent(<span class="string">"onclick"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;)</span><br></pre></td></tr></table></figure><p>在使用attachEvent()方法的情况下，事件处理程序在全局作用域下运行，其中的this等于window。并且用attachEvent（）添加的这些事件处理程序不是以添加他们的顺序执行，而是以相反的顺序触发</p><h3 id="语句绑定的方式："><a href="#语句绑定的方式：" class="headerlink" title="语句绑定的方式："></a>语句绑定的方式：</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Btn.onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;…&#125;;<span class="comment">//绑定</span></span><br><span class="line"></span><br><span class="line">Btn.onckick-<span class="literal">null</span>;<span class="comment">//解除绑定</span></span><br></pre></td></tr></table></figure><p>eg：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> EventUtil = &#123;</span><br><span class="line"></span><br><span class="line">addHandler: <span class="function"><span class="keyword">function</span>(<span class="params">element,type,handler</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(element.addEventListener) &#123;</span><br><span class="line"></span><br><span class="line">element.addEventListener(type,handler,<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(element.attachEvent) &#123;</span><br><span class="line"></span><br><span class="line">element.attachEvent(<span class="string">"on"</span>+type,handler);</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">element[<span class="string">"on"</span> +type] = handler;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">removeHandler: <span class="function"><span class="keyword">function</span>(<span class="params">element,type,handler</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(element.removeEventListener) &#123;</span><br><span class="line"></span><br><span class="line">element.removeEventListener(type,handler,<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(element.detachEvent) &#123;</span><br><span class="line"></span><br><span class="line">element.detachEvent(<span class="string">"on"</span>+type,handler);</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">element[<span class="string">"on"</span> +type] = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h3 id="两种绑定事件的区别："><a href="#两种绑定事件的区别：" class="headerlink" title="两种绑定事件的区别："></a>两种绑定事件的区别：</h3><p>句柄绑定：当前this指向当前节点 支持事件冒泡 不能重复绑定 重复绑定会导致覆盖</p><p>监听器绑定：当前this指向当前元素 支持事件冒泡和捕获 可以重复多次进行事件绑定</p><p>ie事件绑定：当前this不指向当前元素 不支持事件捕获 可以重复多次进行事件绑定</p><h3 id="三．currentTarget与target："><a href="#三．currentTarget与target：" class="headerlink" title="三．currentTarget与target："></a>三．currentTarget与target：</h3><p>currentTarget等于this，target等于当前元素</p><p>例如：点击了button按钮 但是当按钮没有绑定点击事件时该事件便会冒泡到可以处理该事件的父级中（假定是body），那么此时currentTarget=this=body，target=button。</p><p>所以target指向触发事件的对象，currentTarget指向处理事件的对象</p><h3 id="四．标准浏览器和IE浏览器的事件对象："><a href="#四．标准浏览器和IE浏览器的事件对象：" class="headerlink" title="四．标准浏览器和IE浏览器的事件对象："></a>四．标准浏览器和IE浏览器的事件对象：</h3><p>标准浏览器下事件对象是event,打印目标对象：event.target</p><p>IE浏览器下事件对象是window.event，打印目标对象：window.event.srcElement</p><h3 id="五．阻止对象默认行为："><a href="#五．阻止对象默认行为：" class="headerlink" title="五．阻止对象默认行为："></a>五．阻止对象默认行为：</h3><p>标准浏览器：event.preventDefault（）；</p><p>IE浏览器：window.event.returnValue=false;</p><h3 id="六．阻止事件冒泡："><a href="#六．阻止事件冒泡：" class="headerlink" title="六．阻止事件冒泡："></a>六．阻止事件冒泡：</h3><p>标准浏览器：event.stopPropagation();</p><p>IE浏览器：window.event.cancel.Bubble=true；</p><p>Eg：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">varEventUtil = &#123;</span><br><span class="line"></span><br><span class="line">addHandler:<span class="function"><span class="keyword">function</span>(<span class="params">element,type,handler</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(element.addEventListener) &#123;</span><br><span class="line"></span><br><span class="line">element.addEventListener(type,handler,<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">&#125;elseif(element.attachEvent) &#123;</span><br><span class="line"></span><br><span class="line">element.attachEvent(<span class="string">"on"</span>+type,handler);</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">element[<span class="string">"on"</span> +type] = handler;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">removeHandler:<span class="function"><span class="keyword">function</span>(<span class="params">element,type,handler</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(element.removeEventListener) &#123;</span><br><span class="line"></span><br><span class="line">element.removeEventListener(type,handler,<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">&#125;elseif(element.detachEvent) &#123;</span><br><span class="line"></span><br><span class="line">element.detachEvent(<span class="string">"on"</span>+type,handler);</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">element[<span class="string">"on"</span> +type] =<span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">getEvent:<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">returnevent ? event : <span class="built_in">window</span>.event;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">getTarget:<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">returnevent.target || event.srcElement;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">preventDefault:<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(event.preventDefault) &#123;</span><br><span class="line"></span><br><span class="line">event.preventDefault();</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">event.returnValue =<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">stopPropagation:<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(event.stopPropagation) &#123;</span><br><span class="line"></span><br><span class="line">event.stopPropagation();</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">event.cancelBubble =<span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h3 id="七．焦点事件："><a href="#七．焦点事件：" class="headerlink" title="七．焦点事件："></a>七．焦点事件：</h3><p>blur：在元素失去焦点时触发，这个事件不会冒泡，所有浏览器都支持。</p><p>foucs：在元素获得焦点时触发，这个事件不会冒泡，所有浏览器都支持。</p><h3 id="八．鼠标事件："><a href="#八．鼠标事件：" class="headerlink" title="八．鼠标事件："></a>八．鼠标事件：</h3><p>1.click事件：在用户单击鼠标按钮或者按下回车键触发；</p><p>2.dblclick事件：在用户双击鼠标按钮时被触发；</p><p>3.mousedown事件：在用户按下了任意鼠标按钮时被触发，mousedown的事件对象中有一个属性叫做button，这个属性的值是0的时候代表我们按下的是左键，1的时候代表按下的中键，2的时候代表按下的是右键。</p><p>4.mouseenter事件：在鼠标光标从元素外部移动到元素范围之内被触发</p><p>5.mousemove事件：当鼠标指针在元素内部移动时重复地触发。</p><p>6.mouseout事件：用户将其移入另一个元素内被触发。</p><p>7.mouseover事件：鼠标指针在元素外部，用户将移入另一个元素的边界时触发，感觉和mouseenter事件类似；</p><p>8.mouseup事件：用户释放鼠标按钮时触发；</p><p>除了mouseenter和mouseleave，所有鼠标事件都会冒泡</p><p>所有的鼠标事件都有clientX和clientY，代表的是鼠标点击的位置，我们可以通过e.clientX和e.clentY来查看。</p><p>Eg：</p><p>拖拽事件的实现：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'div'</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drag</span>(<span class="params">elem</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> disX,</span><br><span class="line"></span><br><span class="line">dixY;</span><br><span class="line"></span><br><span class="line">addEvent(elem, <span class="string">'mousedown'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> event = e || <span class="built_in">window</span>.event;</span><br><span class="line"></span><br><span class="line">disX = event.clientX - <span class="built_in">parseInt</span>(getStyle(elem, <span class="string">'left'</span>));</span><br><span class="line"></span><br><span class="line">disY = event.clientY - <span class="built_in">parseInt</span>(getStyle(elem, <span class="string">'top'</span>));</span><br><span class="line"></span><br><span class="line">addEvent(<span class="built_in">document</span>, <span class="string">'mousemove'</span>, mouseMove);</span><br><span class="line"></span><br><span class="line">addEvent(<span class="built_in">document</span>, <span class="string">'mouseup'</span>, mouseUp);</span><br><span class="line"></span><br><span class="line">stopBubble(e);</span><br><span class="line"></span><br><span class="line">cancelHandler(e);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mouseMove</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> event = e || <span class="built_in">window</span>.event;</span><br><span class="line"></span><br><span class="line">elem.style.left = event.clientX - disX + <span class="string">'px'</span>;</span><br><span class="line"></span><br><span class="line">elem.style.top = event.clientY - disY + <span class="string">'px'</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mouseUp</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">removeEvent(<span class="built_in">document</span>, <span class="string">'mousemove'</span>, mouseMove);</span><br><span class="line"></span><br><span class="line">removeEvent(<span class="built_in">document</span>, <span class="string">'mouseup'</span>, <span class="built_in">arguments</span>.callee);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="九．事件委托："><a href="#九．事件委托：" class="headerlink" title="九．事件委托："></a>九．事件委托：</h3><p>利用事件源对象和事件冒泡来处理的方式就叫做事件委托。</p><h3 id="十．事件委托的优点："><a href="#十．事件委托的优点：" class="headerlink" title="十．事件委托的优点："></a>十．事件委托的优点：</h3><p>1.性能不需要循环所有的子元素一个个绑定事件</p><p>2.灵活当有新的子元素被加入的时候不需要重新绑定事件</p><h3 id="十一-键盘事件："><a href="#十一-键盘事件：" class="headerlink" title="十一.键盘事件："></a>十一.键盘事件：</h3><p>当用户按下键盘时键盘的触发顺序分别是keydown、keypress、keyup。</p><h3 id="keydown和keypress："><a href="#keydown和keypress：" class="headerlink" title="keydown和keypress："></a>keydown和keypress：</h3><p>1.相同点：</p><p>当用户按住键盘不放时两者会一直响应下去</p><p>keyCode和which每个方法都有，表示的是这个键的唯一标示，可以告诉浏览器我们按下的是键盘上的哪一个键，比如空格是32，32就代表空格。不过我们一般都用which，keyCode用的较少。</p><p>2.不同点：</p><p>keydown可以响应所有按键，keypress只响应字符按键（即有ascii码的按键）</p><p>keypress有charCode属性这个属性代表这个字符的ASCII码，配合SHIFT之类的按键可以直接获取大写字母等。</p><p>String上有一个方法叫做fromCharCode，可以接受一个Unicode值（包含ASCII值），然后返回对应的字符串，我们可以配合这个方法和charCode来直接获取输入的字符。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;什么是事件：&quot;&gt;&lt;a href=&quot;#什么是事件：&quot; class=&quot;headerlink&quot; title=&quot;什么是事件：&quot;&gt;&lt;/a&gt;什么是事件：&lt;/h3&gt;&lt;p&gt;事件是交互体验的核心功能&lt;/p&gt;
&lt;h3 id=&quot;一．事件冒泡：&quot;&gt;&lt;a href=&quot;#一．事件冒泡：&quot; c
      
    
    </summary>
    
      <category term="js那些事" scheme="http://yoursite.com/categories/js%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
</feed>
